// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  Active
  Inactive
  Pending //waiting for email verification
  Banned
}

enum PostStatus {
  Public
  Draft
  Private
  FriendOnly
}

model Users {
  id            String     @id @default(uuid()) @map("_id")
  firstName     String
  surname       String
  email         String     @unique
  password      String
  status        UserStatus @default(Pending)
  verifyCode    String?
  profilePicUrl String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  Posts         Posts[]
}

model Posts {
  id       String      @id @default(uuid()) @map("_id")
  content  String
  status   PostStatus  @default(Public)
  authorId String
  images   PostImage[]

  author    Users    @relation(fields: [authorId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PostImage {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Posts?   @relation(fields: [postsId], references: [id], onDelete: Cascade)
  postsId   String?
}
